@page "/"

@inject AzureBlobStorageService AzureBlobStorageService

<PageTitle>Test task</PageTitle>

<h1>Test task Sahanenko Nadiia</h1>
<div class="row">
    <div class="col-6">        
        <EditForm Model="usersFile" OnValidSubmit="UploadFile">
            <DataAnnotationsValidator/>
            <label>Email:</label>
            <InputText class="form-control mb-1" @bind-Value="usersFile.Email"/>
            <ValidationMessage For="@(() => usersFile.Email)" />
             <InputFile id="inputFile" class="form-control mb-1" OnChange="@OnInputFileChange" accept=".docx" />           
            <ValidationMessage For="@(() => usersFile.FilePath)" />
            <button class="btn btn-info">Upload File</button>
        </EditForm>
    </div>
    <div class="col-12">
        <p class="mt-1 alert alert-info" >@Message</p>
        <p class="mt-1 alert alert-danger">@ResultMessage</p>
    </div>
</div>

@code{
    UsersFile usersFile = new();
    string Message = "No file selected";
    string ResultMessage = "Last result: ";

    protected async Task UploadFile()
    {
        UsersFile temp = usersFile;
        usersFile = new();
        Message = "No file selected";

        try
        {
            await AzureBlobStorageService.UploadFileAsync(temp);
            ResultMessage += $"File {temp.FilePath} was upload!; ";
        }
        catch (Exception ex)
        {
            ResultMessage += $"An error occurred during file {temp.FilePath} upload: " + ex.Message;
        }     
    }

    public void OnInputFileChange(InputFileChangeEventArgs e)
    {
        usersFile.FilePath = e.File.Name;
        usersFile.FileObject = e.File;

        Message = $"File {usersFile.FilePath} was selected"; 
        this.StateHasChanged();
    }     
}